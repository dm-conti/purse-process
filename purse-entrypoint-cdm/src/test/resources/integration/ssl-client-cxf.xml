<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:cxf="http://cxf.apache.org/core"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:sec="http://cxf.apache.org/configuration/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://cxf.apache.org/transports/http/configuration
       http://cxf.apache.org/schemas/configuration/http-conf.xsd
       http://cxf.apache.org/configuration/security
       http://cxf.apache.org/schemas/configuration/security.xsd">
       
       
	<!-- Use this configuration for a SSL client -->
		<!--
		About the keystore configuration, you can select one of following solutions:
	    	- use the attribute classpath when the keystore is under resources folder;
	    	- use the attribute file when the keystore is in local file system;
	    	- use the attribute url when the keystore is remote.
	-->
<!--     <http:conduit name="https://localhost:8443/.*"> -->
<!-- 	    <http:tlsClientParameters> -->
			<!-- 
					TrustManager determines whether remote connection should be trusted or not i.e. whether remote party 
					is who it claims to and KeyManager decides which authentication credentials should be sent to the remote 
					host for authentication during SSL handshake.
         	-->
<!-- 	        <sec:trustManagers> -->
<!--                 <sec:keyStore type="JKS" password="${truststore-client.password}" url="${truststore-client}"/> -->
<!--             </sec:trustManagers> -->
			<!-- A key manager is the management of cryptographic keys in a cryptosystem. -->
<!--             <sec:keyManagers keyPassword="${keyManagers-client.password}"> -->
<!--                 <sec:keyStore type="JKS" password="${keystore-client.password}" url="${keystore-client}"/> -->
<!--             </sec:keyManagers> -->
<!-- 	        <sec:cipherSuitesFilter> -->
<!-- 	        these filters ensure that a ciphersuite with -->
<!-- 	          export-suitable or null encryption is used, -->
<!-- 	          but exclude anonymous Diffie-Hellman key change as -->
<!-- 	          this is vulnerable to man-in-the-middle attacks -->
<!-- 		        <sec:include>.*_RSA_.*</sec:include> -->
<!-- 		        <sec:exclude>.*_DH_anon_.*</sec:exclude> -->
<!-- 	        </sec:cipherSuitesFilter> -->
<!-- 	    </http:tlsClientParameters> -->
<!-- 	    <http:client AutoRedirect="true" Connection="Keep-Alive"/> -->
<!--     </http:conduit> -->
    
</beans>
